// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// credsetmat
List credsetmat(NumericMatrix pp, NumericVector iCV, double threshold);
RcppExport SEXP _corrcoverage_credsetmat(SEXP ppSEXP, SEXP iCVSEXP, SEXP thresholdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type pp(ppSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type iCV(iCVSEXP);
    Rcpp::traits::input_parameter< double >::type threshold(thresholdSEXP);
    rcpp_result_gen = Rcpp::wrap(credsetmat(pp, iCV, threshold));
    return rcpp_result_gen;
END_RCPP
}
// zj_pp_c
NumericMatrix zj_pp_c(const NumericVector& zm, int nrep, const NumericMatrix& ERR, const NumericVector& r);
RcppExport SEXP _corrcoverage_zj_pp_c(SEXP zmSEXP, SEXP nrepSEXP, SEXP ERRSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type zm(zmSEXP);
    Rcpp::traits::input_parameter< int >::type nrep(nrepSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix& >::type ERR(ERRSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(zj_pp_c(zm, nrep, ERR, r));
    return rcpp_result_gen;
END_RCPP
}
// zj_pp_arma
arma::mat zj_pp_arma(const arma::vec& Zj, const arma::mat& sigma, int nrep, const arma::mat& ERR, const arma::vec& r);
RcppExport SEXP _corrcoverage_zj_pp_arma(SEXP ZjSEXP, SEXP sigmaSEXP, SEXP nrepSEXP, SEXP ERRSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type Zj(ZjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type nrep(nrepSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ERR(ERRSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(zj_pp_arma(Zj, sigma, nrep, ERR, r));
    return rcpp_result_gen;
END_RCPP
}
// zj_pp_arma2
arma::mat zj_pp_arma2(const arma::vec& zm, int nrep, const arma::mat& ERR, const arma::vec& r);
RcppExport SEXP _corrcoverage_zj_pp_arma2(SEXP zmSEXP, SEXP nrepSEXP, SEXP ERRSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type zm(zmSEXP);
    Rcpp::traits::input_parameter< int >::type nrep(nrepSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ERR(ERRSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(zj_pp_arma2(zm, nrep, ERR, r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_corrcoverage_credsetmat", (DL_FUNC) &_corrcoverage_credsetmat, 3},
    {"_corrcoverage_zj_pp_c", (DL_FUNC) &_corrcoverage_zj_pp_c, 4},
    {"_corrcoverage_zj_pp_arma", (DL_FUNC) &_corrcoverage_zj_pp_arma, 5},
    {"_corrcoverage_zj_pp_arma2", (DL_FUNC) &_corrcoverage_zj_pp_arma2, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_corrcoverage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
